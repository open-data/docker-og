version: "3"
services:
  drupal:
    image: og-drupal
    container_name: og-drupal
    build:
      context: .
      dockerfile: docker/drupal/Dockerfile
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
    working_dir: /var/www/html
    depends_on:
      - postgres
      - solr
      #- mailhog
    links:
      - postgres
      - solr
      #- mailhog
    env_file:
      - .docker.env
    environment:
      CONTAINER_ROLE: drupal
      PGHOST: postgres
      PGDATABASE: og_drupal_local
      PGUSER: homestead
      PGPASSWORD: secret
      SSH_AUTH_SOCK: /ssh-agent
      PATH: '$PATH:/var/www/html/drupal/vendor/bin'
      NGINX_UNAME: www-data
      APP_ROOT: /var/www/html
      SSL_CERT_FILE: /etc/ssl/mkcert/rootCA.pem
      SSL_CERT_DIR: /etc/ssl/mkcert
    volumes:
      - .:/var/www/html
      - ./docker/config/nginx/certs:/usr/share/certs
      - ~/.gitconfig:/etc/gitconfig:ro
      - ~/.ssh:/var/www/html/.ssh:ro
      - $SSH_AUTH_SOCK:/ssh-agent:ro
      #- ./nginx:/var/log/nginx
      - ./docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - $CA_LOCAL_ROOT:/etc/ssl/mkcert:ro
    ports:
      - 443:443
      - 80:80
  ckan:
    container_name: og-ckan
    image: openknowledge/ckan-base:2.8
    build:
      context: .
      dockerfile: docker/ckan/Dockerfile
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
    working_dir: /srv/app
    depends_on:
      - postgres
      - solr
    links:
      - postgres
      - solr
    env_file:
      - .docker.env
    environment:
      CONTAINER_ROLE: ckan
      PGHOST: postgres
      PGDATABASE: og_ckan_local
      PGUSER: homestead
      PGPASSWORD: secret
      SSH_AUTH_SOCK: /ssh-agent
      APP_ROOT: /srv/app
      PATH: '$PATH:/srv/app/ckan/default/bin'
      PY_VERSION: 2.7
      PIP_VERSION: 19.2.1
      SETUP_TOOLS_VERSION: 36.1
      PYTHONHTTPSVERIFY: 0
      SSL_CERT_FILE: /etc/ssl/mkcert/rootCA.pem
      SSL_CERT_DIR: /etc/ssl/mkcert
    volumes:
      - ./docker/config/ckan:/docker-entrypoint.d
      - .:/srv/app
      - ~/.gitconfig:/etc/gitconfig:ro
      - ~/.ssh:/srv/app/.ssh:ro
      - $SSH_AUTH_SOCK:/ssh-agent:ro
      - $CA_LOCAL_ROOT:/etc/ssl/mkcert:ro
    ports:
      - 5001:5000
  postgres:
    container_name: og-postgres
    image: postgres:9.6
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./docker/config/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: og_drupal_local
      POSTGRES_USER: homestead
      POSTGRES_PASSWORD: secret
      POSTGRES_HOST_AUTH_METHOD: trust
    env_file:
      - .docker.env
    user: "${USER_ID:-0}:${GROUP_ID:-0}"
    ports:
      - 15438:5432
  solr:
    container_name: og-solr
    image: solr
    restart: always
    build:
      context: .
      dockerfile: docker/solr/Dockerfile
    working_dir: /opt/solr
    volumes:
      - ./docker/config/solr/certs:/opt/solr/server/certs
      - ./docker/config/solr/certs/solr.p12:/etc/solr.p12
      - ./solr:/opt/solr/server/solr
      - ./docker/config/solr/cores:/var/solr/local_data
      - ./docker/config/solr/ckan_schema.xml:/ckan_schema.xml
    environment:
      - CONTAINER_ROLE=solr
      - SOLR_SSL_ENABLED=true
      - SOLR_SSL_KEY_STORE=/etc/solr.p12
      - SOLR_SSL_KEY_STORE_PASSWORD=changeit
      - SOLR_SSL_TRUST_STORE=/etc/solr.p12
      - SOLR_SSL_TRUST_STORE_PASSWORD=changeit
      - SOLR_SSL_NEED_CLIENT_AUTH=false
      - SOLR_SSL_WANT_CLIENT_AUTH=false
      - SOLR_SSL_CHECK_PEER_NAME=true
      - SOLR_SSL_KEY_STORE_TYPE=PKCS12
      - SOLR_SSL_TRUST_STORE_TYPE=PKCS12
    user: "root:root"
    ports:
      - 8981:8983
  # Commented out due to failed nginx bindings
  # mailhog:
  #   container_name: og-mailhog
  #   image: mailhog/mailhog:v1.0.0
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"

volumes:
  postgres:
    driver: "local"
  solr:
    driver: "local"
